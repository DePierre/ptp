<?xml version="1.0"?>
<report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Arachni/arachni/v1.0.5/components/reporters/xml/schema.xsd">
  <version>1.0.5</version>
  <options>---
datastore:
  report_path: 
browser_cluster:
  pool_size: 6
  job_timeout: 120
  worker_time_to_live: 100
  ignore_images: false
  screen_width: 1600
  screen_height: 1200
http:
  user_agent: Arachni/v1.0.5
  request_timeout: 50000
  request_redirect_limit: 5
  request_concurrency: 20
  request_queue_size: 500
  request_headers: {}
  cookies: {}
scope:
  redundant_path_patterns: {}
  dom_depth_limit: 10
  exclude_path_patterns: []
  exclude_content_patterns: []
  include_path_patterns: []
  restrict_paths: []
  extend_paths: []
  url_rewrites: {}
input:
  values: {}
  default_values:
    "(?i-mx:name)": arachni_name
    "(?i-mx:user)": arachni_user
    "(?i-mx:usr)": arachni_user
    "(?i-mx:pass)": 5543!%arachni_secret
    "(?i-mx:txt)": arachni_text
    "(?i-mx:num)": '132'
    "(?i-mx:amount)": '100'
    "(?i-mx:mail)": arachni@email.gr
    "(?i-mx:account)": '12'
    "(?i-mx:id)": '1'
  without_defaults: false
  force: false
audit:
  exclude_vector_patterns: []
  include_vector_patterns: []
  link_templates: []
  links: true
  forms: true
  cookies: true
session: {}
checks:
- xss_dom_script_context
- xpath_injection
- os_cmd_injection_timing
- xss_tag
- rfi
- csrf
- xss_path
- ldap_injection
- session_fixation
- xss
- unvalidated_redirect
- no_sql_injection
- xss_script_context
- xss_dom_inputs
- file_inclusion
- path_traversal
- response_splitting
- os_cmd_injection
- sql_injection_differential
- xss_dom
- source_code_disclosure
- no_sql_injection_differential
- code_injection_timing
- sql_injection_timing
- xss_event
- code_injection_php_input_wrapper
- code_injection
- sql_injection
- trainer
- common_files
- localstart_asp
- xst
- directory_listing
- backup_files
- webdav
- backdoors
- password_autocomplete
- emails
- private_ip
- cvs_svn_users
- form_upload
- cookie_set_for_parent_domain
- ssn
- http_only_cookies
- html_objects
- unencrypted_password_forms
- credit_card
- insecure_cookies
- captcha
- mixed_resource
- hsts
- http_put
- common_directories
- htaccess_limit
- interesting_responses
- backup_directories
- allowed_methods
- origin_spoof_access_restriction_bypass
platforms: []
plugins: {}
no_fingerprinting: false
authorized_by: 
url: http://10.12.68.25:31337/
</options>
  <start_datetime>2015-05-19T16:41:34+02:00</start_datetime>
  <finish_datetime>2015-05-19T16:41:49+02:00</finish_datetime>
  <sitemap>
    <entry url="http://10.12.68.25:31337/" code="200"/>
    <entry url="http://10.12.68.25:31337/choucroute" code="200"/>
    <entry url="http://10.12.68.25:31337/cake" code="200"/>
  </sitemap>
  <issues>
    <issue>
      <name>Private IP address disclosure</name>
      <description>
Private, or non-routable, IP addresses are generally used within a home or
company network and are typically unknown to anyone outside of that network.

Cyber-criminals will attempt to identify the private IP address range being used
by their victim, to aid in collecting further information that could then lead
to a possible compromise.

Arachni discovered that the affected page returned a RFC 1918 compliant private
IP address and therefore could be revealing sensitive information.

_This finding typically requires manual verification to ensure the context is
correct, as any private IP address within the HTML body will trigger it.
</description>
      <remedy_guidance>
Identifying the context in which the affected page displays a Private IP
address is necessary.

If the page is publicly accessible and displays the Private IP of the affected
server (or supporting infrastructure), then measures should be put in place to
ensure that the IP address is removed from any response.
</remedy_guidance>
      <remedy_code/>
      <severity>low</severity>
      <cwe>200</cwe>
      <digest>2403284658</digest>
      <references>
        <reference title="WebAppSec" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage"/>
      </references>
      <vector>
        <class>Arachni::Element::Header</class>
        <type>header</type>
        <url>http://10.12.68.25:31337/cake</url>
        <action>http://10.12.68.25:31337/cake</action>
        <affected_input_name/>
        <inputs>
          <input name="Host" value="10.12.68.25:31337"/>
        </inputs>
      </vector>
      <variations>
        <variation>
          <vector>
            <seed/>
            <inputs>
              <input name="Host" value="10.12.68.25:31337"/>
            </inputs>
          </vector>
          <remarks/>
          <page>
            <body>    &lt;h2&gt;Chocolate cake&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;225g/8oz plain flour&lt;/li&gt;
        &lt;li&gt;350g/12&#xBD;oz caster sugar&lt;/li&gt;
        &lt;li&gt;85g/3oz cocoa powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp baking powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp bicarbonate of soda&lt;/li&gt;
        &lt;li&gt;2 free-range eggs&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz milk&lt;/li&gt;
        &lt;li&gt;125ml/4&#xBD;fl oz vegetable oil&lt;/li&gt;
        &lt;li&gt;2 tsp vanilla extract&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz boiling water&lt;/li&gt;
    &lt;/ul&gt;
    &lt;a href='/cake'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/cake</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET /cake HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/cake</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0079</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h2&gt;Chocolate cake&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;225g/8oz plain flour&lt;/li&gt;
        &lt;li&gt;350g/12&#xBD;oz caster sugar&lt;/li&gt;
        &lt;li&gt;85g/3oz cocoa powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp baking powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp bicarbonate of soda&lt;/li&gt;
        &lt;li&gt;2 free-range eggs&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz milk&lt;/li&gt;
        &lt;li&gt;125ml/4&#xBD;fl oz vegetable oil&lt;/li&gt;
        &lt;li&gt;2 tsp vanilla extract&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz boiling water&lt;/li&gt;
    &lt;/ul&gt;
    &lt;a href='/cake'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/cake</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </page>
          <referring_page>
            <body>    &lt;h2&gt;Chocolate cake&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;225g/8oz plain flour&lt;/li&gt;
        &lt;li&gt;350g/12&#xBD;oz caster sugar&lt;/li&gt;
        &lt;li&gt;85g/3oz cocoa powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp baking powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp bicarbonate of soda&lt;/li&gt;
        &lt;li&gt;2 free-range eggs&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz milk&lt;/li&gt;
        &lt;li&gt;125ml/4&#xBD;fl oz vegetable oil&lt;/li&gt;
        &lt;li&gt;2 tsp vanilla extract&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz boiling water&lt;/li&gt;
    &lt;/ul&gt;
    &lt;a href='/cake'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/cake</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET /cake HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/cake</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0079</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h2&gt;Chocolate cake&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;225g/8oz plain flour&lt;/li&gt;
        &lt;li&gt;350g/12&#xBD;oz caster sugar&lt;/li&gt;
        &lt;li&gt;85g/3oz cocoa powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp baking powder&lt;/li&gt;
        &lt;li&gt;1&#xBD; tsp bicarbonate of soda&lt;/li&gt;
        &lt;li&gt;2 free-range eggs&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz milk&lt;/li&gt;
        &lt;li&gt;125ml/4&#xBD;fl oz vegetable oil&lt;/li&gt;
        &lt;li&gt;2 tsp vanilla extract&lt;/li&gt;
        &lt;li&gt;250ml/9fl oz boiling water&lt;/li&gt;
    &lt;/ul&gt;
    &lt;a href='/cake'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/cake</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </referring_page>
          <signature/>
          <proof>10.12.68.25:31337</proof>
          <trusted>true</trusted>
          <platform_type/>
          <platform_name/>
        </variation>
      </variations>
    </issue>
    <issue>
      <name>Private IP address disclosure</name>
      <description>
Private, or non-routable, IP addresses are generally used within a home or
company network and are typically unknown to anyone outside of that network.

Cyber-criminals will attempt to identify the private IP address range being used
by their victim, to aid in collecting further information that could then lead
to a possible compromise.

Arachni discovered that the affected page returned a RFC 1918 compliant private
IP address and therefore could be revealing sensitive information.

_This finding typically requires manual verification to ensure the context is
correct, as any private IP address within the HTML body will trigger it.
</description>
      <remedy_guidance>
Identifying the context in which the affected page displays a Private IP
address is necessary.

If the page is publicly accessible and displays the Private IP of the affected
server (or supporting infrastructure), then measures should be put in place to
ensure that the IP address is removed from any response.
</remedy_guidance>
      <remedy_code/>
      <severity>low</severity>
      <cwe>200</cwe>
      <digest>2402378830</digest>
      <references>
        <reference title="WebAppSec" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage"/>
      </references>
      <vector>
        <class>Arachni::Element::Header</class>
        <type>header</type>
        <url>http://10.12.68.25:31337/choucroute</url>
        <action>http://10.12.68.25:31337/choucroute</action>
        <affected_input_name/>
        <inputs>
          <input name="Host" value="10.12.68.25:31337"/>
        </inputs>
      </vector>
      <variations>
        <variation>
          <vector>
            <seed/>
            <inputs>
              <input name="Host" value="10.12.68.25:31337"/>
            </inputs>
          </vector>
          <remarks/>
          <page>
            <body>    &lt;h2&gt;Choucroute Garnie&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;1/3 cup kosher salt, plus more for seasoning&lt;/li&gt;
        &lt;li&gt;2 tablespoons light brown sugar&lt;/li&gt;
        &lt;li&gt;3 pounds pork back ribs or baby back ribs, cut into 3 sections&lt;/li&gt;
        &lt;li&gt;6 pounds sauerkraut (in plastic bags), drained&lt;/li&gt;
        &lt;li&gt;1/4 cup duck or goose fat or peanut oil&lt;/li&gt;
        &lt;li&gt;1 large onion, coarsely chopped&lt;/li&gt;
        &lt;li&gt;4 large garlic cloves, coarsely chopped&lt;/li&gt;
        &lt;li&gt;20 juniper berries&lt;/li&gt;
        &lt;li&gt;3 large bay leaves&lt;/li&gt;
        &lt;li&gt;1/2 teaspoon caraway seeds&lt;/li&gt;
        &lt;li&gt;1 teaspoon freshly ground black pepper&lt;/li&gt;
        &lt;li&gt;3 cups chicken stock&lt;/li&gt;
        &lt;li&gt;1 1/2 cups Riesling or Pinot Gris&lt;/li&gt;
        &lt;li&gt;2 pounds Polish kielbasa, skinned and cut into 2-inch pieces&lt;/li&gt;
        &lt;li&gt;10 skinless hot dogs&lt;/li&gt;
        &lt;li&gt;One 2-pound piece of boneless boiled ham (3 to 4 inches wide), sliced 1/4 inch thick&lt;/li&gt;
        &lt;li&gt;2 pounds medium potatoes (about 10), peeled&lt;/li&gt;
        &lt;li&gt;Assorted mustards, for serving&lt;/li&gt;
    &lt;/ul&gt;

    &lt;a href='/choucroute'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/choucroute</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET /choucroute HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/choucroute</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0083</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h2&gt;Choucroute Garnie&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;1/3 cup kosher salt, plus more for seasoning&lt;/li&gt;
        &lt;li&gt;2 tablespoons light brown sugar&lt;/li&gt;
        &lt;li&gt;3 pounds pork back ribs or baby back ribs, cut into 3 sections&lt;/li&gt;
        &lt;li&gt;6 pounds sauerkraut (in plastic bags), drained&lt;/li&gt;
        &lt;li&gt;1/4 cup duck or goose fat or peanut oil&lt;/li&gt;
        &lt;li&gt;1 large onion, coarsely chopped&lt;/li&gt;
        &lt;li&gt;4 large garlic cloves, coarsely chopped&lt;/li&gt;
        &lt;li&gt;20 juniper berries&lt;/li&gt;
        &lt;li&gt;3 large bay leaves&lt;/li&gt;
        &lt;li&gt;1/2 teaspoon caraway seeds&lt;/li&gt;
        &lt;li&gt;1 teaspoon freshly ground black pepper&lt;/li&gt;
        &lt;li&gt;3 cups chicken stock&lt;/li&gt;
        &lt;li&gt;1 1/2 cups Riesling or Pinot Gris&lt;/li&gt;
        &lt;li&gt;2 pounds Polish kielbasa, skinned and cut into 2-inch pieces&lt;/li&gt;
        &lt;li&gt;10 skinless hot dogs&lt;/li&gt;
        &lt;li&gt;One 2-pound piece of boneless boiled ham (3 to 4 inches wide), sliced 1/4 inch thick&lt;/li&gt;
        &lt;li&gt;2 pounds medium potatoes (about 10), peeled&lt;/li&gt;
        &lt;li&gt;Assorted mustards, for serving&lt;/li&gt;
    &lt;/ul&gt;

    &lt;a href='/choucroute'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/choucroute</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </page>
          <referring_page>
            <body>    &lt;h2&gt;Choucroute Garnie&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;1/3 cup kosher salt, plus more for seasoning&lt;/li&gt;
        &lt;li&gt;2 tablespoons light brown sugar&lt;/li&gt;
        &lt;li&gt;3 pounds pork back ribs or baby back ribs, cut into 3 sections&lt;/li&gt;
        &lt;li&gt;6 pounds sauerkraut (in plastic bags), drained&lt;/li&gt;
        &lt;li&gt;1/4 cup duck or goose fat or peanut oil&lt;/li&gt;
        &lt;li&gt;1 large onion, coarsely chopped&lt;/li&gt;
        &lt;li&gt;4 large garlic cloves, coarsely chopped&lt;/li&gt;
        &lt;li&gt;20 juniper berries&lt;/li&gt;
        &lt;li&gt;3 large bay leaves&lt;/li&gt;
        &lt;li&gt;1/2 teaspoon caraway seeds&lt;/li&gt;
        &lt;li&gt;1 teaspoon freshly ground black pepper&lt;/li&gt;
        &lt;li&gt;3 cups chicken stock&lt;/li&gt;
        &lt;li&gt;1 1/2 cups Riesling or Pinot Gris&lt;/li&gt;
        &lt;li&gt;2 pounds Polish kielbasa, skinned and cut into 2-inch pieces&lt;/li&gt;
        &lt;li&gt;10 skinless hot dogs&lt;/li&gt;
        &lt;li&gt;One 2-pound piece of boneless boiled ham (3 to 4 inches wide), sliced 1/4 inch thick&lt;/li&gt;
        &lt;li&gt;2 pounds medium potatoes (about 10), peeled&lt;/li&gt;
        &lt;li&gt;Assorted mustards, for serving&lt;/li&gt;
    &lt;/ul&gt;

    &lt;a href='/choucroute'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/choucroute</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET /choucroute HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/choucroute</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0083</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h2&gt;Choucroute Garnie&lt;/h2&gt;

    &lt;ul&gt;
        &lt;li&gt;1/3 cup kosher salt, plus more for seasoning&lt;/li&gt;
        &lt;li&gt;2 tablespoons light brown sugar&lt;/li&gt;
        &lt;li&gt;3 pounds pork back ribs or baby back ribs, cut into 3 sections&lt;/li&gt;
        &lt;li&gt;6 pounds sauerkraut (in plastic bags), drained&lt;/li&gt;
        &lt;li&gt;1/4 cup duck or goose fat or peanut oil&lt;/li&gt;
        &lt;li&gt;1 large onion, coarsely chopped&lt;/li&gt;
        &lt;li&gt;4 large garlic cloves, coarsely chopped&lt;/li&gt;
        &lt;li&gt;20 juniper berries&lt;/li&gt;
        &lt;li&gt;3 large bay leaves&lt;/li&gt;
        &lt;li&gt;1/2 teaspoon caraway seeds&lt;/li&gt;
        &lt;li&gt;1 teaspoon freshly ground black pepper&lt;/li&gt;
        &lt;li&gt;3 cups chicken stock&lt;/li&gt;
        &lt;li&gt;1 1/2 cups Riesling or Pinot Gris&lt;/li&gt;
        &lt;li&gt;2 pounds Polish kielbasa, skinned and cut into 2-inch pieces&lt;/li&gt;
        &lt;li&gt;10 skinless hot dogs&lt;/li&gt;
        &lt;li&gt;One 2-pound piece of boneless boiled ham (3 to 4 inches wide), sliced 1/4 inch thick&lt;/li&gt;
        &lt;li&gt;2 pounds medium potatoes (about 10), peeled&lt;/li&gt;
        &lt;li&gt;Assorted mustards, for serving&lt;/li&gt;
    &lt;/ul&gt;

    &lt;a href='/choucroute'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/choucroute</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </referring_page>
          <signature/>
          <proof>10.12.68.25:31337</proof>
          <trusted>true</trusted>
          <platform_type/>
          <platform_name/>
        </variation>
      </variations>
    </issue>
    <issue>
      <name>Private IP address disclosure</name>
      <description>
Private, or non-routable, IP addresses are generally used within a home or
company network and are typically unknown to anyone outside of that network.

Cyber-criminals will attempt to identify the private IP address range being used
by their victim, to aid in collecting further information that could then lead
to a possible compromise.

Arachni discovered that the affected page returned a RFC 1918 compliant private
IP address and therefore could be revealing sensitive information.

_This finding typically requires manual verification to ensure the context is
correct, as any private IP address within the HTML body will trigger it.
</description>
      <remedy_guidance>
Identifying the context in which the affected page displays a Private IP
address is necessary.

If the page is publicly accessible and displays the Private IP of the affected
server (or supporting infrastructure), then measures should be put in place to
ensure that the IP address is removed from any response.
</remedy_guidance>
      <remedy_code/>
      <severity>low</severity>
      <cwe>200</cwe>
      <digest>1221482153</digest>
      <references>
        <reference title="WebAppSec" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage"/>
      </references>
      <vector>
        <class>Arachni::Element::Header</class>
        <type>header</type>
        <url>http://10.12.68.25:31337/</url>
        <action>http://10.12.68.25:31337/</action>
        <affected_input_name/>
        <inputs>
          <input name="Host" value="10.12.68.25:31337"/>
        </inputs>
      </vector>
      <variations>
        <variation>
          <vector>
            <seed/>
            <inputs>
              <input name="Host" value="10.12.68.25:31337"/>
            </inputs>
          </vector>
          <remarks/>
          <page>
            <body>    &lt;h1&gt;List of recipes&lt;/h1&gt;

    &lt;ul&gt;
        &lt;li&gt;&lt;a href="/choucroute"&gt;Choucroute garnie&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/cake"&gt;Chocolate cake&lt;/a&gt;&lt;/li&gt;
        ... And more to come!
    &lt;/ul&gt;
    &lt;a href='/'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET / HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0076</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h1&gt;List of recipes&lt;/h1&gt;

    &lt;ul&gt;
        &lt;li&gt;&lt;a href="/choucroute"&gt;Choucroute garnie&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/cake"&gt;Chocolate cake&lt;/a&gt;&lt;/li&gt;
        ... And more to come!
    &lt;/ul&gt;
    &lt;a href='/'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </page>
          <referring_page>
            <body>    &lt;h1&gt;List of recipes&lt;/h1&gt;

    &lt;ul&gt;
        &lt;li&gt;&lt;a href="/choucroute"&gt;Choucroute garnie&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/cake"&gt;Chocolate cake&lt;/a&gt;&lt;/li&gt;
        ... And more to come!
    &lt;/ul&gt;
    &lt;a href='/'&gt;reload the current page&lt;/a&gt;
</body>
            <request>
              <url>http://10.12.68.25:31337/</url>
              <method>get</method>
              <parameters/>
              <headers>
                <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
                <header name="User-Agent" value="Arachni/v1.0.5"/>
              </headers>
              <body/>
              <raw>GET / HTTP/1.1&#xD;
Host: 10.12.68.25:31337&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v1.0.5&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
&#xD;
</raw>
            </request>
            <response>
              <url>http://10.12.68.25:31337/</url>
              <code>200</code>
              <ip_address>10.12.68.25</ip_address>
              <time>0.0076</time>
              <return_code>ok</return_code>
              <return_message>No error</return_message>
              <headers>
                <header name="Host" value="10.12.68.25:31337"/>
                <header name="Connection" value="close"/>
                <header name="X-Powered-By" value="PHP/5.6.9"/>
                <header name="Content-Type" value="text/html;charset=UTF-8"/>
              </headers>
              <body>    &lt;h1&gt;List of recipes&lt;/h1&gt;

    &lt;ul&gt;
        &lt;li&gt;&lt;a href="/choucroute"&gt;Choucroute garnie&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/cake"&gt;Chocolate cake&lt;/a&gt;&lt;/li&gt;
        ... And more to come!
    &lt;/ul&gt;
    &lt;a href='/'&gt;reload the current page&lt;/a&gt;
</body>
              <raw_headers>HTTP/1.1 200 OK&#xD;
Host: 10.12.68.25:31337&#xD;
Connection: close&#xD;
X-Powered-By: PHP/5.6.9&#xD;
Content-type: text/html;charset=UTF-8&#xD;
&#xD;
</raw_headers>
            </response>
            <dom>
              <url>http://10.12.68.25:31337/</url>
              <transitions/>
              <data_flow_sinks/>
              <execution_flow_sinks/>
            </dom>
          </referring_page>
          <signature/>
          <proof>10.12.68.25:31337</proof>
          <trusted>true</trusted>
          <platform_type/>
          <platform_name/>
        </variation>
      </variations>
    </issue>
  </issues>
  <plugins>
    <healthmap>
      <name>Health map</name>
      <description>Generates a simple list of safe/unsafe URLs.</description>
      <results>
        <map>
          <with_issues>http://10.12.68.25:31337/</with_issues>
          <with_issues>http://10.12.68.25:31337/cake</with_issues>
          <with_issues>http://10.12.68.25:31337/choucroute</with_issues>
        </map>
        <total>3</total>
        <with_issues>3</with_issues>
        <without_issues>0</without_issues>
        <issue_percentage>100</issue_percentage>
      </results>
    </healthmap>
  </plugins>
</report>
